package com.khanhlh.irview;

import androidx.annotation.ColorInt;

public class RainbowPalette extends ThermalPalette {



    //lookup
    static int[] lookupTable = new int[]
            {0x263923,0x263924,0x263825,0x253825,0x253826,0x243827,0x243828,0x233729,0x23372a,0x23372b,0x22372c,0x21372d,0x21362e,0x21362f,0x203630,0x203631,
                    0x203632,0x1f3632,0x1f3633,0x1e3534,0x1e3535,0x1e3536,0x1d3537,0x1d3538,0x1c3539,0x1c353a,0x1c353b,0x1b353c,0x1b343d,0x1a343e,0x1a343f,0x1a3440,
                    0x193441,0x193442,0x183443,0x183444,0x183445,0x183446,0x173447,0x173448,0x163449,0x16334a,0x16334b,0x16334c,0x15334c,0x15334d,0x15334e,0x15334f,
                    0x143350,0x143351,0x143352,0x133353,0x133354,0x133355,0x123356,0x123357,0x123358,0x123458,0x123459,0x11345a,0x11345b,0x11345c,0x10345d,0x10345e,
                    0x10345f,0x103460,0x103461,0xf3462,0xf3463,0xf3464,0xf3465,0xe3465,0xe3566,0xe3567,0xe3568,0xe3569,0xe356a,0xd356b,0xd356c,0xd356d,
                    0xd366e,0xd366f,0xc3670,0xc3671,0xc3672,0xc3673,0xc3774,0xc3775,0xc3776,0xb3776,0xb3777,0xb3778,0xb3879,0xb387a,0xb387b,0xb387c,
                    0xb397d,0xb397e,0xa397e,0xa397f,0xa3980,0xa3a81,0xa3a82,0xa3a83,0xa3a84,0xa3b85,0xa3b86,0xa3b87,0xa3c88,0xa3c89,0xa3c8a,0xa3c8b,
                    0xa3d8b,0xa3d8c,0xa3d8d,0xa3e8e,0xa3e8f,0x93e90,0x93f91,0x93f92,0x93f93,0xa3f93,0xa4094,0xa4095,0xa4196,0xa4197,0xa4198,0xa4298,
                    0xa4299,0xa429a,0xa439b,0xa439c,0xa439d,0xa449d,0xa449e,0xa449f,0xa459f,0xa45a0,0xa45a1,0xa46a2,0xa46a3,0xa47a3,0xb47a4,0xb47a5,
                    0xb48a5,0xb48a6,0xb48a7,0xb49a8,0xb49a9,0xb4aa9,0xb4aaa,0xb4aab,0xc4bab,0xc4bac,0xc4cad,0xc4cae,0xc4daf,0xc4db0,0xc4eb0,0xd4eb1,
                    0xd4fb2,0xd4fb3,0xd50b4,0xd50b5,0xe51b5,0xe51b6,0xe52b7,0xe52b8,0xe53b9,0xf53b9,0xf53ba,0xf54ba,0xf54bb,0xf55bb,0xf55bc,0x1056bd,
                    0x1056be,0x1057be,0x1057bf,0x1158c0,0x1159c1,0x1159c2,0x115ac2,0x125ac3,0x125bc3,0x125bc4,0x125cc5,0x135cc5,0x135cc6,0x135dc6,0x135dc7,0x135ec7,
                    0x135ec8,0x145ec8,0x145fc9,0x1460ca,0x1560ca,0x1560cb,0x1561cb,0x1561cc,0x1562cc,0x1662cc,0x1662cd,0x1663cd,0x1663ce,0x1664ce,0x1764cf,0x1765d0,
                    0x1866d1,0x1867d2,0x1968d3,0x1968d4,0x1969d4,0x1a69d4,0x1a6ad5,0x1a6bd6,0x1b6bd6,0x1b6bd7,0x1b6cd7,0x1c6dd8,0x1c6ed9,0x1d6ed9,0x1d6fda,0x1d70db,
                    0x1e70db,0x1e71db,0x1e71dc,0x1f71dc,0x1f72dd,0x1f73dd,0x2073de,0x2074de,0x2074df,0x2175df,0x2175e0,0x2176e0,0x2276e0,0x2277e1,0x2277e2,0x2378e2,
                    0x2379e3,0x2479e3,0x247ae3,0x247ae4,0x257be4,0x257be5,0x257ce5,0x267ce5,0x267de6,0x277ee6,0x277ee7,0x277fe7,0x287fe8,0x2880e8,0x2981e9,0x2982e9,
                    0x2a82ea,0x2a83ea,0x2b83eb,0x2b84eb,0x2c85ec,0x2c86ec,0x2d86ed,0x2d87ed,0x2e87ed,0x2e88ee,0x2f89ee,0x2f89ef,0x2f8aef,0x308aef,0x308af0,0x308bf0,
                    0x318bf0,0x318cf0,0x318cf1,0x328df1,0x328ef1,0x338ef2,0x338ff2,0x348ff3,0x3490f3,0x3591f3,0x3591f4,0x3592f4,0x3692f4,0x3693f5,0x3793f5,0x3794f5,
                    0x3894f5,0x3895f6,0x3996f6,0x3996f7,0x3a97f7,0x3a98f7,0x3b98f7,0x3b99f8,0x3c99f8,0x3c9af8,0x3d9af9,0x3d9bf9,0x3e9cf9,0x3e9dfa,0x3f9dfa,0x3f9efa,
                    0x409efa,0x409ffb,0x419ffb,0x41a0fb,0x42a1fb,0x42a1fc,0x43a2fc,0x44a3fc,0x44a3fd,0x45a4fd,0x45a5fd,0x46a5fd,0x46a6fe,0x47a6fe,0x47a7fe,0x48a7fe,
                    0x48a8fe,0x49a8ff,0x49a9ff,0x4aa9ff,0x4aaaff,0x4babff,0x4cabff,0x4cacff,0x4dadff,0x4eaeff,0x4fafff,0x50b0ff,0x50b1ff,0x51b1ff,0x52b2ff,0x52b3ff,
                    0x53b3ff,0x54b4ff,0x54b5ff,0x55b5ff,0x55b6ff,0x56b6ff,0x56b7ff,0x57b7ff,0x57b8ff,0x58b8ff,0x58b9ff,0x59b9ff,0x59baff,0x5abaff,0x5bbbff,0x5bbcff,
                    0x5cbcff,0x5dbdff,0x5dbeff,0x5ebeff,0x5fbfff,0x60c0ff,0x61c1ff,0x62c2ff,0x63c3ff,0x64c3ff,0x64c4ff,0x65c4ff,0x65c5ff,0x66c5ff,0x66c6ff,0x67c6ff,
                    0x67c7ff,0x68c7ff,0x68c8ff,0x69c8ff,0x6ac9ff,0x6bcaff,0x6ccbff,0x6dcbff,0x6dccff,0x6eccff,0x6ecdff,0x6fcdff,0x70ceff,0x70cfff,0x71cfff,0x72d0ff,
                    0x73d1ff,0x74d1ff,0x74d2ff,0x75d2ff,0x75d3ff,0x76d3ff,0x77d4ff,0x78d4ff,0x78d5ff,0x79d5ff,0x79d6ff,0x7ad6ff,0x7bd7ff,0x7cd8ff,0x7dd8ff,0x7dd9ff,
                    0x7ed9ff,0x7edaff,0x7fdaff,0x80dbff,0x81dbff,0x81dcff,0x82dcff,0x83ddff,0x84ddff,0x84deff,0x85deff,0x86dfff,0x87dfff,0x87e0ff,0x88e0ff,0x89e1ff,
                    0x8ae2ff,0x8be2ff,0x8ce3ff,0x8de4ff,0x8ee4ff,0x8fe5ff,0x90e5ff,0x90e6ff,0x91e6ff,0x92e7ff,0x93e7fe,0x94e8fe,0x95e8fe,0x95e9fe,0x96e9fd,0x97e9fd,
                    0x97eafd,0x98eafd,0x98eafc,0x99ebfc,0x9aebfc,0x9aebfb,0x9becfb,0x9cecfb,0x9cedfb,0x9dedfa,0x9eedfa,0x9eeefa,0x9feef9,0xa0eef9,0xa0eff9,0xa1eff8,
                    0xa2eff8,0xa2f0f8,0xa3f0f7,0xa4f0f7,0xa4f1f7,0xa5f1f6,0xa6f1f6,0xa7f1f5,0xa7f2f5,0xa8f2f5,0xa9f2f4,0xa9f3f4,0xaaf3f4,0xaaf3f3,0xabf3f3,0xabf4f3,
                    0xacf4f2,0xadf4f2,0xadf4f1,0xaef4f1,0xaef5f1,0xaff5f0,0xb0f5f0,0xb0f5ef,0xb1f6ef,0xb2f6ef,0xb2f6ee,0xb3f6ee,0xb4f6ed,0xb4f7ed,0xb5f7ed,0xb5f7ec,
                    0xb6f7ec,0xb6f7eb,0xb7f7eb,0xb7f8eb,0xb8f8ea,0xb9f8ea,0xb9f8e9,0xbaf8e9,0xbaf8e8,0xbbf9e8,0xbcf9e7,0xbdf9e6,0xbef9e6,0xbef9e5,0xbff9e5,0xbffae4,
                    0xc0fae4,0xc0fae3,0xc1fae3,0xc1fae2,0xc2fae2,0xc3fae1,0xc4fae0,0xc5fae0,0xc5fadf,0xc5fbdf,0xc6fbdf,0xc6fbde,0xc7fbde,0xc7fbdd,0xc8fbdd,0xc8fbdc,
                    0xc9fbdc,0xc9fbdb,0xcafbdb,0xcafbda,0xcbfbda,0xcbfbd9,0xccfbd9,0xccfbd8,0xcdfbd8,0xcdfbd7,0xcefbd7,0xcefbd6,0xcffbd6,0xcffbd5,0xd0fbd5,0xd0fbd4,
                    0xd1fbd4,0xd1fbd3,0xd2fbd3,0xd2fbd2,0xd3fbd1,0xd4fbd0,0xd5fbcf,0xd5fbce,0xd6fbce,0xd6fbcd,0xd6facd,0xd7facc,0xd8facb,0xd8faca,0xd9faca,0xd9fac9,
                    0xdafac9,0xdafac8,0xdbfac8,0xdbfac7,0xdbfac6,0xdcf9c6,0xdcf9c5,0xddf9c5,0xddf9c4,0xdef9c4,0xdef9c3,0xdff9c2,0xdff8c1,0xe0f8c1,0xe0f8c0,0xe1f8bf,
                    0xe1f8be,0xe2f8be,0xe2f8bd,0xe2f7bd,0xe3f7bd,0xe3f7bc,0xe3f7bb,0xe4f7bb,0xe4f7ba,0xe5f6ba,0xe5f6b9,0xe5f6b8,0xe6f6b8,0xe6f6b7,0xe7f6b6,0xe7f5b6,
                    0xe7f5b5,0xe8f5b5,0xe8f5b4,0xe8f5b3,0xe9f4b3,0xe9f4b2,0xeaf4b1,0xeaf3b0,0xebf3af,0xebf3ae,0xecf3ae,0xecf2ae,0xecf2ad,0xedf2ac,0xedf2ab,0xedf1ab,
                    0xeef1aa,0xeef1a9,0xeff0a9,0xeff0a8,0xeff0a7,0xf0efa6,0xf0efa5,0xf1efa4,0xf1eea4,0xf1eea3,0xf2eea2,0xf2eda2,0xf2eda1,0xf3eda1,0xf3eda0,0xf3ec9f,
                    0xf4ec9e,0xf4eb9d,0xf5eb9c,0xf5ea9b,0xf5ea9a,0xf6ea9a,0xf6e999,0xf6e998,0xf7e898,0xf7e897,0xf7e896,0xf7e796,0xf8e795,0xf8e794,0xf8e694,0xf8e693,
                    0xf9e693,0xf9e692,0xf9e592,0xf9e591,0xfae590,0xfae490,0xfae48f,0xfae38e,0xfbe38e,0xfbe38d,0xfbe28c,0xfbe28b,0xfce18b,0xfce18a,0xfce189,0xfce089,
                    0xfde088,0xfddf87,0xfddf86,0xfdde86,0xfede85,0xfede84,0xfedd84,0xfedd83,0xffdc82,0xffdc81,0xffdb81,0xffdb80,0xffda7f,0xffda7e,0xffd97e,0xffd97d,
                    0xffd87c,0xffd87b,0xffd77b,0xffd77a,0xffd679,0xffd678,0xffd578,0xffd577,0xffd476,0xffd475,0xffd375,0xffd374,0xffd273,0xffd172,0xffd171,0xffd071,
                    0xffd070,0xffcf6f,0xffcf6e,0xffce6e,0xffce6d,0xffcd6d,0xffcd6c,0xffcc6b,0xffcb6a,0xffcb69,0xffca69,0xffca68,0xffc967,0xffc866,0xffc865,0xffc765,
                    0xffc764,0xffc664,0xffc663,0xffc562,0xffc461,0xffc460,0xffc360,0xffc35f,0xffc25f,0xffc25e,0xffc15d,0xffc05c,0xffbf5b,0xffbf5a,0xffbe5a,0xffbe59,
                    0xffbd58,0xffbc57,0xffbc56,0xffbb56,0xffbb55,0xffba55,0xffba54,0xffb954,0xffb953,0xffb852,0xffb751,0xffb650,0xffb54f,0xffb54e,0xffb44e,0xffb44d,
                    0xffb34d,0xffb34c,0xffb24c,0xffb24b,0xffb14b,0xffb14a,0xffb049,0xffaf48,0xffae47,0xffad47,0xffad46,0xffac46,0xffac45,0xffab45,0xffab44,0xffaa43,
                    0xffa942,0xffa841,0xffa740,0xffa63f,0xffa53e,0xffa43d,0xffa33c,0xffa23b,0xffa13a,0xffa139,0xffa039,0xffa038,0xff9f38,0xff9f37,0xff9e37,0xff9e36,
                    0xff9d36,0xff9c35,0xff9b34,0xff9a33,0xff9932,0xff9831,0xff9730,0xff962f,0xff952e,0xff942e,0xff942d,0xff932d,0xff932c,0xff922c,0xff922b,0xff912b,
                    0xff912a,0xff902a,0xff9029,0xff8f29,0xff8f28,0xff8e28,0xff8d27,0xff8c26,0xff8b25,0xff8a25,0xff8a24,0xff8924,0xff8923,0xff8823,0xff8722,0xff8621,
                    0xff8520,0xff841f,0xff831f,0xff831e,0xff821e,0xff821d,0xff811d,0xff811c,0xff801c,0xff7f1b,0xff7e1a,0xff7d19,0xff7c19,0xff7b18,0xff7a17,0xff7917,
                    0xff7916,0xff7816,0xff7815,0xff7715,0xff7714,0xff7614,0xff7513,0xff7412,0xff7312,0xff7311,0xff7211,0xff7110,0xff7010,0xff700f,0xff6f0f,0xff6f0e,
                    0xff6e0e,0xff6d0d,0xff6c0c,0xff6b0c,0xff6b0b,0xff6a0b,0xff690a,0xff680a,0xff6809,0xff6709,0xff6608,0xff6508,0xff6507,0xff6407,0xff6406,0xff6306,
                    0xff6205,0xff6105,0xff6104,0xff6004,0xff5f03,0xff5e03,0xff5e02,0xff5d02,0xff5c01,0xff5b01,0xff5b00,0xff5a00,0xff5900,0xff5800,0xff5700,0xff5600,
                    0xfe5500,0xfe5400,0xfe5300,0xfe5200,0xfd5200,0xfd5100,0xfd5000,0xfd4f00,0xfc4f00,0xfc4e00,0xfc4d00,0xfc4c00,0xfb4c00,0xfb4b00,0xfb4a00,0xfb4900,
                    0xfa4900,0xfa4800,0xfa4700,0xf94600,0xf94500,0xf94400,0xf84300,0xf84200,0xf84100,0xf74100,0xf74000,0xf73f00,0xf63e00,0xf63d00,0xf63c00,0xf53c00,
                    0xf53b00,0xf53a00,0xf43900,0xf43800,0xf43700,0xf33700,0xf33600,0xf33500,0xf23500,0xf23400,0xf23300,0xf13200,0xf13100,0xf03100,0xf03000,0xf02f00,
                    0xef2e00,0xef2d00,0xee2c00,0xee2b00,0xed2a00,0xed2900,0xec2800,0xec2700,0xeb2700,0xeb2600,0xeb2500,0xea2500,0xea2400,0xea2300,0xe92300,0xe92200,
                    0xe82100,0xe82000,0xe72000,0xe71f00,0xe71e00,0xe61e00,0xe61d00,0xe51c00,0xe51b00,0xe41b00,0xe41a00,0xe31900,0xe31800,0xe21800,0xe21700,0xe21600,
                    0xe11600,0xe11500,0xe01500,0xe01400,0xdf1300,0xdf1200,0xde1200,0xde1100,0xdd1100,0xdd1000,0xdc0f00,0xdb0e00,0xdb0d00,0xda0d00,0xda0c00,0xd90c00,
                    0xd90b00,0xd80b00,0xd80a00,0xd70a00,0xd70900,0xd60900,0xd60800,0xd50800,0xd50700,0xd40700,0xd40600,0xd30600,0xd30500,0xd20500,0xd20400,0xd10400,
                    0xd10300,0xd00300,0xd00200,0xcf0200,0xce0100,0xcd0100,0xcd0000,0xcc0000,0xcb0000,0xca0000,0xc90000,0xc80000,0xc70000,0xc60000,0xc50000,0xc40000,
                    0xc30000,0xc20000,0xc10000,0xc00000,0xbf0000,0xbe0000,0xbd0000,0xbc0000,0xbb0000,0xba0000,0xb90000,0xb80000,0xb70000,0xb60000,0xb50000,0xb40001,
                    0xb40002,0xb30002,0xb30003,0xb20004,0xb20005,0xb10005,0xb10006,0xb00007,0xb00008,0xaf0009,0xaf000a,0xae000a,0xae000b,0xad000c,0xad000d,0xac000e,
                    0xac000f,0xab000f,0xab0010,0xaa0011,0xaa0012,0xa90013,0xa90014,0xa80015,0xa80016,0xa70017,0xa70018,0xa60019,0xa6001a,0xa5001b,0xa5001c,0xa4001d};


    private static int convert(double temperature, double minimumTemperature, double maximimumTemperature){
        //map to 0-1023 (inclusive)
        int lookup = (int) Math.round(((temperature - minimumTemperature) / (maximimumTemperature - minimumTemperature)) * 1023);
        lookup = Math.min(lookup, 1023);
        lookup = Math.max(lookup, 0);

        return (lookupTable[lookup] | 0xFF << 24);

    }

    @Override
    public double getDefaultMinTemperature() {
        return -5.0;
    }

    @Override
    public double getDefaultMaxTemperature() {
        return 50.0;
    }

    @ColorInt
    @Override
    public int temperatureToColor(double temperature, double min, double max) {
        return convert(temperature, min, max);
    }

}
